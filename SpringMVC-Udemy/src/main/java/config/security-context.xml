<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



	<security:authentication-manager id="dao-auth">
		<!-- 
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query='SELECT username,authority FROM bankschema.users where binary username= ?'
				users-by-username-query='SELECT username,password,enabled FROM bankschema.users where binary username=?'
				id="jdbcUserService" />
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>  -->
		
		<security:authentication-provider user-service-ref="usersService">
		</security:authentication-provider> 
	
	</security:authentication-manager>

     <bean id="usersService"
        class="serviceLayer.UsersService" />
        
 	<!-- <http authentication-manager-ref="jdbc-auth"
        access-decision-manager-ref="accessDecisionManager"> 
        <intercept-url pattern="/emp/**" access="Admin" />
        <form-login login-page="/login" authentication-failure-url="/denied"
            username-parameter="username" password-parameter="password"
            default-target-url="/home" />
        <logout invalidate-session="true" logout-success-url="/login"
            logout-url="/j_spring_security_logout" />
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1"
                expired-url="/login" />
        </session-management>
    </http>  -->
    
    
    
	<security:http use-expressions="true" authentication-manager-ref="dao-auth" >
		<security:intercept-url pattern="/viewAllCustomers" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/deleteUser" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/updateUserInfo" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/updateBook" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/createBook" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/deleteBook" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/chooseExportMethod" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/generateReport" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/books" access="isAuthenticated()" />
		<security:intercept-url pattern="/sellBook" access="isAuthenticated()" />
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/login" access="permitAll"/>
		<security:intercept-url pattern="/logOut" access="permitAll"/>
		<security:intercept-url pattern="/message" access="permitAll"/>
		<security:intercept-url pattern="/accessDenied" access="permitAll"/>
		<security:intercept-url pattern="/newAccount" access="permitAll"/>
		<security:intercept-url pattern="/createAccount" access="permitAll"/>
		<security:intercept-url pattern="/static/**" access="permitAll"/>
		<security:intercept-url pattern="/**" access="denyAll" />
		<security:form-login login-page="/login"
			authentication-failure-url="/login?error=true" />
		<security:logout logout-success-url="/logOut" />
		<security:access-denied-handler error-page="/accessDenied" />
		<security:remember-me key="offersAppKey"
			user-service-ref="usersService" />
	</security:http>



	<security:global-method-security pre-post-annotations="enabled"
		secured-annotations="enabled">
	</security:global-method-security>
	
	
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>
</beans>
